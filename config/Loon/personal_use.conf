# Edit from ErdongChan-LazyConf

[General]
# IPv6 支持
ipv6 = true
# > 跳过某个域名或者IP段
skip-proxy = 127.0.0.1,192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,100.64.0.0/10,localhost,*.local,passenger.t3go.cn,passenger.t3go.cn,e.crashlynatics.com,captive.apple.com,*.tongji.edu.cn
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32,*.tongji.edu.cn
# DNS 服务器
dns-server = system,119.29.29.29,114.114.114.114,223.5.5.5
# dns-server = 119.29.29.29,223.5.5.5
# 腾讯DoH和阿里云DoH,google,cloudflare
doh-server = https://223.5.5.5/dns-query,https://dns.alidns.com/dns-query
# Wi-Fi 访问
# > 允许 Wi-Fi 网络下其它设备访问
allow-wifi-access = true
wifi-access-http-port = 7890
wifi-access-socks5-port = 7891
# > 代理测速 URL
proxy-test-url = http://cp.cloudflare.com/generate_204
# > 测速超时 (s)
test-timeout = 2
interface-mode = auto
switch-node-after-failure-times = 3
# > 解决一些ip请求无法匹配域名类规则的问题。real-ip指定的域名将不返回fake ip响应，直接将dns请求发往目标dns服务器
real-ip = msftconnecttest.com, msftncsi.com, *.msftconnecttest.com, *.msftncsi.com, *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com, *.battlenet.com.cn, *.battlenet.com, *.blzstatic.cn, *.battle.net, *.tongji.edu.cn,*.github.com
# 解析器
resource-parser = https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/scripts/sub-store-parser.js
geoip-url = https://gitlab.com/Masaiki/GeoIP2-CN/-/raw/release/Country.mmdb

[Host]
#可以使用以下四种模式：
# 1 指定域名使用对应的IP地址
# 2 将域名指向另一个域名
# 3 指定域名请求DNS时使用特定的DNS服务器，格式为：google.com = server:8.8.8.8 或者 *.baidu.com = server:https://example.com/dns-query
#  指定具体的SSID环境下使用特定的DNS服务器

[Proxy]

[Remote Proxy]
# 远程节点订阅
# 机场名(可改为你喜欢的名字) = 订阅URL
# > Sub-Store订阅，Sub-Store用户可自行替换自己的Sub-Store订阅链接，方便多机场用户
MyProxy = https://sub.store/download/collection/All,parser-enabled = true,udp=true,fast-open=true,vmess-aead=true,enabled=true
# 机场2 = https://example2/server-complete.txt,udp=false,fast-open=false,vmess-aead=true,enabled=false

[Remote Filter]
支持邮件 = NameRegex,RenzheCloud, FilterKey = "Standard"
# 筛选订阅节点，筛选后的结果可加入到策略组中，目前支持三种筛选方式
# NodeSelect: 使用在UI上选择的节点。
# NameKeyword: 根据提供的关键词对订阅中所有节点的名称进行筛选，使用筛选后的节点。
# NameRegex: 根据提供的正则表达式对订阅中所有节点的名称进行筛选，使用筛选后的节点。
香港 = NameRegex,MyProxy, FilterKey = "(?i)(港|HK|Hong)"
台湾 = NameRegex,MyProxy, FilterKey = "(?i)(台|TW|Tai)"
日本 = NameRegex,MyProxy, FilterKey = "(?i)(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan)"
韩国 = NameRegex,MyProxy, FilterKey = "(?i)(KR|Korea|KOR|首尔|韩|韓)"
美国 = NameRegex,MyProxy, FilterKey = "(?i)(美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States)"
新加坡 = NameRegex,MyProxy, FilterKey = "(?i)(新加坡|坡|狮城|SG|Singapore)"

[Proxy Group]
Mail = url-test,支持邮件,url = http://cp.cloudflare.com/generate_204,interval = 600,img-url = mail
## 策略组
## 将分流规则传递过来的网络请求进行分发
# 所有节点
Proxy = select,MyProxy,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Proxy.png
# 自动选择最优节点-HK
Auto-HK = url-test,香港,url = http://www.gstatic.com/generate_204,interval = 600,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Auto.png
# 自动选择最优节点-US
Auto-US = url-test,美国,url = http://www.gstatic.com/generate_204,interval = 600,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Auto.png
# 自动选择最优节点-JP
Auto-JP = url-test,日本,url = http://www.gstatic.com/generate_204,interval = 600,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Auto.png
# 自动选择最优节点-TW
Auto-TW = url-test,台湾,url = http://www.gstatic.com/generate_204,interval = 600,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Auto.png
# 自动选择最优节点-SG
Auto-SG = url-test,新加坡,url = http://www.gstatic.com/generate_204,interval = 600,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Auto.png
# 服务器按地区分组策略
# > 美国
US = select,美国,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Country/US.png
# > 香港
HK = select,香港,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Country/HK02.png
# > 日本
JP = select,日本,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Country/JP.png
# > 台湾
TW = select,台湾,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Country/TW02.png
# > 新加坡
SG = select,新加坡,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Country/SG.png
# Global策略
Global = select,Auto-HK,Auto-US,Auto-JP,Auto-TW,Auto-SG,HK,TW,SG,JP,US,FINAL,DIRECT,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Outside.png
# GlobalMedia策略
GlobalMedia = select,Auto-HK,Auto-US,Auto-JP,Auto-TW,Auto-SG,HK,TW,SG,JP,US,FINAL,DIRECT,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/GMedia.png
# 国外媒体细分策略
# > Netflix策略
Netflix = select,Auto-HK,Auto-US,Auto-JP,Auto-TW,Auto-SG,HK,TW,SG,JP,US,FINAL,DIRECT,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Netflix.png
# > Disney+策略
Disney+ = select,Auto-HK,Auto-US,Auto-JP,Auto-TW,Auto-SG,HK,TW,SG,JP,US,FINAL,DIRECT,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Disney+.png
# > HBO策略
HBO = select,Auto-HK,Auto-US,Auto-JP,Auto-TW,Auto-SG,HK,TW,SG,JP,US,FINAL,DIRECT,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/HBO.png
# > YouTube策略
YouTube = select,Auto-HK,Auto-US,Auto-JP,Auto-TW,Auto-SG,HK,TW,SG,JP,US,FINAL,DIRECT,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Youtube.png
# > Spotify策略
Spotify = select,Auto-HK,Auto-US,Auto-JP,Auto-TW,Auto-SG,HK,TW,SG,JP,US,FINAL,DIRECT,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Spotify.png
# > TikTok策略
TikTok = select,Auto-HK,Auto-US,Auto-JP,Auto-TW,Auto-SG,HK,TW,SG,JP,US,FINAL,DIRECT,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Tiktok.png
# 国内媒体细分策略
# > BiliBili策略
# BiliBili = select,HK,TW,DIRECT,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Bilibili.png
# 软件&服务策略
# > Telegram策略
Telegram = select,Auto-HK,Auto-US,Auto-JP,Auto-TW,Auto-SG,HK,TW,SG,JP,US,FINAL,DIRECT,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Telegram.png
# > Twitter策略
Twitter = select,Auto-HK,Auto-US,Auto-JP,Auto-TW,Auto-SG,HK,TW,SG,JP,US,FINAL,DIRECT,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Twitter.png
# > Speedtest策略
Speedtest = select,Auto-HK,Auto-US,Auto-JP,Auto-TW,Auto-SG,HK,TW,SG,JP,US,FINAL,DIRECT,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Speedtest.png
# > PayPal策略
PayPal = select,Auto-HK,Auto-US,Auto-JP,Auto-TW,Auto-SG,HK,TW,SG,JP,US,FINAL,DIRECT,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Paypal.png
# > TestFlight策略
TestFlight = select,Auto-HK,Auto-US,Auto-JP,Auto-TW,Auto-SG,HK,TW,SG,JP,US,FINAL,DIRECT,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/TestFlight.png
# > Apple策略
Apple = select,Auto-HK,Auto-US,Auto-JP,Auto-TW,Auto-SG,HK,TW,SG,JP,US,FINAL,DIRECT,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Apple.png
# > Google策略
Google = select,Auto-HK,Auto-US,Auto-JP,Auto-TW,Auto-SG,HK,TW,SG,JP,US,FINAL,DIRECT,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Google.png
# > Microsoft策略
Microsoft = select,Auto-HK,Auto-US,Auto-JP,Auto-TW,Auto-SG,HK,TW,SG,JP,US,FINAL,DIRECT,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Microsoft.png
# > Weibo策略
Weibo = select,Auto-HK,Auto-US,Auto-JP,Auto-TW,Auto-SG,HK,TW,SG,JP,US,FINAL,DIRECT,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Weibo.png
# Mainland策略-国内访问
Mainland = select,Auto-HK,Auto-US,Auto-JP,Auto-TW,Auto-SG,HK,TW,SG,JP,US,FINAL,DIRECT,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Mainland.png
# Advertising策略-去广告
Advertising = select,DIRECT,REJECT,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/AdBlock.png
# FINAL策略：如果以上的策略均未被匹配到，则听从此策略组的规定
FINAL = select,Proxy,Auto-HK,Auto-US,Auto-JP,Auto-TW,Auto-SG,DIRECT,img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Final01.png

[Remote Rule]
https://raw.githubusercontent.com/Egolas/rule_script/main/rule/Loon/ai.list, policy=Auto-US, tag=ai规则, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/Loon/Mail/Mail.list, policy=Mail, tag=邮件规则, enabled=true
## 远程分流规则订阅
## 将网络请求进行分流，网络请求的走向(是否能成功访问)由匹配到的策略组决定

# Speedtest规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Speedtest/Speedtest.list, policy=Speedtest, tag=Speedtest规则, enabled=true
# Netflix规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Netflix/Netflix.list, policy=Netflix, tag=Netflix规则, enabled=true
# Disney规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Disney/Disney.list, policy=Disney+, tag=Disney+规则, enabled=true
# HBO规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/HBO/HBO.list, policy=HBO, tag=HBO规则, enabled=true
# Spotify规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Spotify/Spotify.list, policy=Spotify, tag=Spotify规则, enabled=true
# YouTube规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/YouTube/YouTube.list, policy=YouTube, tag=YouTube规则, enabled=true
# TikTok规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/TikTok/TikTok.list, policy=YouTube, tag=TikTok规则, enabled=true
# GlobalMedia规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/GlobalMedia/GlobalMedia.list, policy=GlobalMedia, tag=GlobalMedia规则, enabled=true
# Telegram规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Telegram/Telegram.list, policy=Telegram, tag=Telegram规则, enabled=true
# Paypal规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/PayPal/PayPal.list, policy=PayPal, tag=PayPal规则, enabled=true
# Microsoft规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Microsoft/Microsoft.list, policy=Microsoft, tag=Microsoft规则, enabled=true
# Twitter规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Twitter/Twitter.list, policy=Twitter, tag=Twitter规则, enabled=true
# Google规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Google/Google.list, policy=Google, tag=Google规则, enabled=true
# TestFlight规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/TestFlight/TestFlight.list, policy=TestFlight, tag=TestFlight规则, enabled=true
# Apple规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Apple/Apple.list, policy=Apple, tag=Apple规则, enabled=true
# Global规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Global/Global.list, policy=Global, tag=Global规则, enabled=true
# BiliBili规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/BiliBili/BiliBili.list, policy=BiliBili, tag=BiliBili规则, enabled=true
# Weibo规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Weibo/Weibo.list, policy=Weibo, tag=Weibo规则, enabled=true
# Advertising规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Advertising/Advertising.list, policy=Advertising, tag=Advertising规则, enabled=true
# Mainland规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/China/China.list, policy=Mainland, tag=Mainland规则, enabled=true

[Rule]
# 本地分流规则:相同规则下本地规则优先生效
# 绕过企业证书过期
DOMAIN,ocsp.apple.com,REJECT
# 其它
DOMAIN-SUFFIX,local,DIRECT
# 抖音本地分流
DOMAIN-SUFFIX,snssdk.com,DIRECT
DOMAIN-SUFFIX,amemv.com,DIRECT
GEOIP,CN,DIRECT
FINAL,FINAL

[Remote Rewrite]
# 远程重写

[URL Rewrite]
# 本地重写

[Remote Script]

[Script]
# 任务脚本
# generic script-path=https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/check.js, timeout=300, tag=流媒体-解锁查询, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/GMedia.png

[Plugin]
https://raw.githubusercontent.com/Egolas/rule_script/main/plugin/BingAI.plugin, tag=BingAI, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/Node_detection_tool.plugin, enabled=true
https://raw.githubusercontent.com/I-am-R-E/Functional-Store-Hub/Master/NodeLinkCheck/Loon.plugin, enabled=true
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/MediaCheck.plugin, enabled=false
https://raw.githubusercontent.com/DualSubs/DualSubs/main/plugin/DualSubs.plugin, enabled=true
https://raw.githubusercontent.com/chengkongyiban/Loon/main/Loon-Gallery/Rewrite_to_Loon.plugin, enabled=false
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/LoonGallery.plugin, policy=Proxy, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/Weibo_remove_ads.plugin, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/Emby_crack.plugin, tag=Emby_Crack, enabled=true
# 远程(重写)插件
https://raw.githubusercontent.com/erdongchanyo/Rules/main/Loon/AllinOneRewritePlugin/edc.plugin, tag=EDC-ALLinONE, enabled=true

https://raw.githubusercontent.com/app2smile/rules/master/plugin/youtube.plugin, tag=Youtube首页瀑布流去广告, enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/external/Loon/TikTokUnlock/TikTokUS/TikTokUS.plugin, tag=TikTokUnlockUS(blackmatrix7, enabled=false

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/Advertising/Advertising.plugin, policy=REJECT, tag=Advertising (blackmatrix7, enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/Redirect/Redirect.plugin, tag=Redirect (blackmatrix7, enabled=true

https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.loon.plugin, policy=Proxy, tag=BoxJs, enabled=true

https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/config/Loon.plugin, policy=FINAL, tag=Sub-Store, enabled=true

